version: '3.8'

services:
  deqah_nginx:
    image: nginx:latest
    container_name: deqah_nginx
    restart: "on-failure"
    ports:
      - "80:80"
    networks:
      - deqah-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  deqah_db:
    image: mysql:latest
    restart: always
    container_name: deqah_db
    environment:
      MYSQL_PASSWORD : ${DB_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: deqah
      MYSQL_AUTHENTICATION_PLUGIN: caching_sha2_password
    ports:
      - "4306:3306"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - deqah-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "--silent" ]
      interval: 5s
      timeout: 1s
      retries: 10

  deqha_gateway:
    build:
      context: ./backend/
    container_name: deqha_gateway
    restart: "on-failure"
    ports:
      - "8080:8080"
    volumes:
      - './backend:/app'
      - './backend/node_modules:/app/node_modules'
    depends_on:
      - deqah_db
      - deqah_redis
    networks:
      - deqah-network
    env_file:
      - .env
#    command: sh -c "npx prisma migrate deploy && npx prisma generate && npm run dev"
    command: sh -c "npm run start:${NODE_ENV}"
    stdin_open: true
    tty: true

  deqah_frontend:
    build:
      context: ./frontend/
    container_name: deqah_frontend
    restart: "on-failure"
    ports:
      - "3000:3000"
    volumes:
      - './frontend:/app'
      - './frontend/node_modules:/app/node_modules'
    command: sh -c "npm run start:${NODE_ENV}"
    networks:
      - deqah-network
    env_file:
      - .env
    stdin_open: true
    tty: true

  deqah_redis:
    image: redis:latest
    container_name: deqah_redis
    ports:
      - "7379:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    labels:
      - "name=redis"
      - "mode=standalone"
    networks:
      - deqah-network
    restart: always
    command: redis-server /usr/local/conf/redis.conf

volumes:
  db-data:
  media:

networks:
  deqah-network: